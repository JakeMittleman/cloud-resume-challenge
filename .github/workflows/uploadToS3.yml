name: Upload to S3
run-name: Upload to S3

on:
  workflow_dispatch:
  workflow_run:
    workflows: 
      - Deploy With Terraform
    type:
      - complete

jobs:
  runs-on: ubuntu-latest
  env:
    AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
    region: "us-east-1"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}

     - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::829475484955:role/github-actions
          aws-region: us-east-1

      - name: Push to S3
        run: |
          aws s3 sync ./Frontend s3://$BUCKET_NAME --delete
  # zip-handler:
  #   runs-on: ubuntu-latest
  #   permissions:
  #         contents: write
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}

  #     - name: Zip Folder
  #       working-directory: ./Backend
  #       run: zip ../terraform/getVisitorCount.zip getVisitorCount.py
  #     - name: Commit New Handler Code
  #       env:
  #         LOGIN_EMAIL: ${{ secrets.LOGIN_EMAIL }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         git config --global user.name "Github Actions"
  #         git config --global user.email "${{ env.LOGIN_EMAIL }}"

  #         git add -A
  #         git commit -m "Zipping file via github actions"
  #         git push

  terraform-apply:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      region: "us-east-1"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        id: terraform-plan
        working-directory: ./terraform
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        working-directory: ./terraform
        if: steps.terraform-plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
